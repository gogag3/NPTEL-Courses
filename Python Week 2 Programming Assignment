# Question 1

# Write a function intreverse(n) that takes as input a positive integer n and returns the integer obtained by reversing the digits in n.
# Here are some examples of how your function should work.

# >>> intreverse(783)
# 387
# >>> intreverse(242789)
# 987242
# >>> intreverse(3)
# 3

# Tips: Try some cool slicing techniques in Python, refernce : https://docs.python.org/2.3/whatsnew/section-slices.html

# My Answer (Works well, short and handy. Do not blindly apply this, might be wrong but for the given cases it was O.K

def intreverse(n):
	return(int(str(n)[::-1]))

# Question 2

# Write a function matched(s) that takes as input a string s and checks if the brackets "(" and ")" in s are matched: that is, every "(" has a matching ")" after it and every ")" has a matching "(" before it.  Your function should ignore all other symbols that appear in s.  Your function should return True if s has matched brackets and False if it does not.

# Here are some examples to show how your function should work.

# >>> matched("zb%78")
# True
# >>> matched("(7)(a")
# False
# >>> matched("a)*(?")
# False
# >>> matched("((jkl)78(A)&l(8(dd(FJI:),):)?)")
# True

# Tips : General counter problem. We need to count the parenthesis, if count = 0 then string is balanced with parenthesis otherwise not.
# My Answer :

def matched(s):
	count = 0
	for i in range(0, len(s)):
		if s[i] == "(" :
			count = count + 1
		elif s[i] == ")":
			count = count - 1
		else:
			count = count
	if count == 0:
		return(True)
	else:
		return(False)
      
# Question 3

# Write a function sumprimes(l) that takes as input a list of integers and retuns the sum of all the prime numbers in l.

# Here are some examples to show how your function should work.

# >>> sumprimes([3,3,1,13])
# 19
# >>> sumprimes([2,4,6,9,11])
# 13
# >>> sumprimes([-3,1,6])
# 0

# Tips : Take a look at Line 73, amazingly short technique to check out for factors at once!
# My Answer, do not follow this blindly as it might be wrong but for the test cases above it works just fine!

def sumprimes(n):
	sum1 = 0
	for i in range(0, len(n)):
		num = n[i]
		if num > 1:
			if all(num%j != 0 for j in range(2, int(num**0.5)+1)):
				sum1 = sum1 + num
		else:
			sum1 = 0
	return(sum1)      
